/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.metriport.api.resources.medical.document.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.metriport.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = GetDocumentQueryStatusRequest.Builder.class)
public final class GetDocumentQueryStatusRequest {
    private final String patientId;

    private final Map<String, Object> additionalProperties;

    private GetDocumentQueryStatusRequest(String patientId, Map<String, Object> additionalProperties) {
        this.patientId = patientId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the Patient for which to list available Documents.
     */
    @JsonProperty("patientId")
    public String getPatientId() {
        return patientId;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GetDocumentQueryStatusRequest && equalTo((GetDocumentQueryStatusRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GetDocumentQueryStatusRequest other) {
        return patientId.equals(other.patientId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.patientId);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static PatientIdStage builder() {
        return new Builder();
    }

    public interface PatientIdStage {
        _FinalStage patientId(String patientId);

        Builder from(GetDocumentQueryStatusRequest other);
    }

    public interface _FinalStage {
        GetDocumentQueryStatusRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements PatientIdStage, _FinalStage {
        private String patientId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(GetDocumentQueryStatusRequest other) {
            patientId(other.getPatientId());
            return this;
        }

        /**
         * <p>The ID of the Patient for which to list available Documents.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @Override
        @JsonSetter("patientId")
        public _FinalStage patientId(String patientId) {
            this.patientId = patientId;
            return this;
        }

        @Override
        public GetDocumentQueryStatusRequest build() {
            return new GetDocumentQueryStatusRequest(patientId, additionalProperties);
        }
    }
}
